// Mocks generated by Mockito 5.4.0 from annotations
// in ditonton/test/presentation/pages/tv/home_tv_show_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i9;

import 'package:ditonton/common/state_enum.dart' as _i7;
import 'package:ditonton/domain/entities/tv/tv.dart' as _i6;
import 'package:ditonton/domain/usecases/tv/get_now_playing_tv_show.dart'
    as _i2;
import 'package:ditonton/domain/usecases/tv/get_popular_tv_show.dart' as _i3;
import 'package:ditonton/domain/usecases/tv/get_top_rated_tv_show.dart' as _i4;
import 'package:ditonton/presentation/provider/tv/tv_show_list_notifier.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetNowPlayingTVShows_0 extends _i1.SmartFake
    implements _i2.GetNowPlayingTVShows {
  _FakeGetNowPlayingTVShows_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPopularTVShows_1 extends _i1.SmartFake
    implements _i3.GetPopularTVShows {
  _FakeGetPopularTVShows_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTopRatedTVShows_2 extends _i1.SmartFake
    implements _i4.GetTopRatedTVShows {
  _FakeGetTopRatedTVShows_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TVShowListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVShowListNotifier extends _i1.Mock
    implements _i5.TVShowListNotifier {
  MockTVShowListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetNowPlayingTVShows get getNowPlayingTVShows => (super.noSuchMethod(
        Invocation.getter(#getNowPlayingTVShows),
        returnValue: _FakeGetNowPlayingTVShows_0(
          this,
          Invocation.getter(#getNowPlayingTVShows),
        ),
      ) as _i2.GetNowPlayingTVShows);
  @override
  _i3.GetPopularTVShows get getPopularTVShows => (super.noSuchMethod(
        Invocation.getter(#getPopularTVShows),
        returnValue: _FakeGetPopularTVShows_1(
          this,
          Invocation.getter(#getPopularTVShows),
        ),
      ) as _i3.GetPopularTVShows);
  @override
  _i4.GetTopRatedTVShows get getTopRatedTVShows => (super.noSuchMethod(
        Invocation.getter(#getTopRatedTVShows),
        returnValue: _FakeGetTopRatedTVShows_2(
          this,
          Invocation.getter(#getTopRatedTVShows),
        ),
      ) as _i4.GetTopRatedTVShows);
  @override
  List<_i6.TV> get nowPlayingTVShows => (super.noSuchMethod(
        Invocation.getter(#nowPlayingTVShows),
        returnValue: <_i6.TV>[],
      ) as List<_i6.TV>);
  @override
  _i7.RequestState get nowPlayingState => (super.noSuchMethod(
        Invocation.getter(#nowPlayingState),
        returnValue: _i7.RequestState.Empty,
      ) as _i7.RequestState);
  @override
  List<_i6.TV> get popularTVShows => (super.noSuchMethod(
        Invocation.getter(#popularTVShows),
        returnValue: <_i6.TV>[],
      ) as List<_i6.TV>);
  @override
  _i7.RequestState get popularTVShowsState => (super.noSuchMethod(
        Invocation.getter(#popularTVShowsState),
        returnValue: _i7.RequestState.Empty,
      ) as _i7.RequestState);
  @override
  List<_i6.TV> get topRatedTVShows => (super.noSuchMethod(
        Invocation.getter(#topRatedTVShows),
        returnValue: <_i6.TV>[],
      ) as List<_i6.TV>);
  @override
  _i7.RequestState get topRatedTVShowsState => (super.noSuchMethod(
        Invocation.getter(#topRatedTVShowsState),
        returnValue: _i7.RequestState.Empty,
      ) as _i7.RequestState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i8.Future<void> fetchNowPlayingTVShows() => (super.noSuchMethod(
        Invocation.method(
          #fetchNowPlayingTVShows,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> fetchPopularTVShows() => (super.noSuchMethod(
        Invocation.method(
          #fetchPopularTVShows,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> fetchTopRatedTVShows() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedTVShows,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
